using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using NTD.DTO;
using NTD.BUS;

namespace NTD.GUI
{
    public partial class frmNVien : DevExpress.XtraEditors.XtraForm
    {
        public frmNVien()
        {
            InitializeComponent();

            
        }

        private void CapNhatNhanVien(object sender, EventArgs e)
        {
            
        }
        private void LoadData()
        {
            var dataTable = bus_NV.GetAllData();
            gcNhanVien.DataSource = dataTable;
        }
        NhanVien_BUS bus_NV = new NhanVien_BUS();
        private void frmNVien_Load(object sender, EventArgs e)
        {
            int tag = int.Parse(this.Tag.ToString());
            var roleform = GlobalVar.dictRoleForm[tag];
            usChucNang1.EnnableFunction(roleform);
            usChucNang1.Controls["btnthem"].Click += ThemNV;
            usChucNang1.Controls["btndong"].Click += DongNV;
            usChucNang1.Controls["btnsua"].Click += SuaNV;
            usChucNang1.Controls["btnxoa"].Click += XoaNV;
            usChucNang1.Controls["btnxuat"].Click += xuat;
            usChucNang1.Controls["btnnaplai"].Click += naplai;
            usChucNang1.Controls["btnnhap"].Click += nhap;

            LoadData();
        }

        private void nhap(object sender, EventArgs e)
        {
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a ExcelDataSource

            XtraOpenFileDialog SaveFileDialog = new XtraOpenFileDialog();

            SaveFileDialog.ShowDialog();

            excelDataSource1.FileName=SaveFileDialog.FileName + ".xlsx";
            excelDataSource1.Fill();
            gcNhanVien.DataSource = excelDataSource1;

        }

        private void naplai(object sender, EventArgs e)
        {
            gcNhanVien.Refresh();
        }

        private void xuat(object sender, EventArgs e)
        {
            XtraSaveFileDialog SaveFileDialog = new XtraSaveFileDialog();

            SaveFileDialog.ShowDialog();

            gcNhanVien.ExportToXlsx(SaveFileDialog.FileName + ".xlsx");
        }

        private void XoaNV(object sender, EventArgs e)
        {
            string ma = gc_rootNhanVien.GetRowCellValue(gc_rootNhanVien.FocusedRowHandle, "Mã").ToString();

            if (gc_rootNhanVien.GetRowCellValue(gc_rootNhanVien.FocusedRowHandle, "Mã").ToString() != null)
            {
                var rs = bus_NV.DeleteById(ma);

                if (rs > 0)
                {
                    LoadData();
                    MessageBox.Show("Delete Successfully!!!!!!!!");
                }
            }
        }

        private void SuaNV(object sender, EventArgs e)
        {
            NhanVien nv = new NhanVien()
            {
                MaNV = gc_rootNhanVien.GetRowCellValue(gc_rootNhanVien.FocusedRowHandle, "Mã").ToString(),
                HoTen = gc_rootNhanVien.GetRowCellValue(gc_rootNhanVien.FocusedRowHandle, "Họ Tên").ToString(),
                DiaChi = gc_rootNhanVien.GetRowCellValue(gc_rootNhanVien.FocusedRowHandle, "Địa Chỉ").ToString(),
                DienThoai = gc_rootNhanVien.GetRowCellValue(gc_rootNhanVien.FocusedRowHandle, "Điện Thoại").ToString()
            };

            frmThemNhanVien nva = new frmThemNhanVien(nv);
            nva.ShowDialog();
            LoadData();
        }

        private void DongNV(object sender, EventArgs e)
        {
            this.Close();
        }

        private void ThemNV(object sender, EventArgs e)
        {
            frmThemNhanVien nv = new frmThemNhanVien();
            nv.ShowDialog();
            LoadData();
        }

        // This event is generated by Data Source Configuration Wizard
        void unboundSource1_ValueNeeded(object sender, DevExpress.Data.UnboundSourceValueNeededEventArgs e)
        {

            // Handle this event to obtain data from your data source
            // e.Value = something /* TODO: Assign the real data here.*/
        }

        // This event is generated by Data Source Configuration Wizard
        void unboundSource1_ValuePushed(object sender, DevExpress.Data.UnboundSourceValuePushedEventArgs e)
        {

            // Handle this event to save modified data back to your data source
            // something = e.Value; /* TODO: Propagate the value into the storage.*/
        }

        // This event is generated by Data Source Configuration Wizard
        void unboundSource1_ValueNeeded_1(object sender, DevExpress.Data.UnboundSourceValueNeededEventArgs e)
        {

            // Handle this event to obtain data from your data source
            // e.Value = something /* TODO: Assign the real data here.*/
        }

        // This event is generated by Data Source Configuration Wizard
        void unboundSource1_ValuePushed_1(object sender, DevExpress.Data.UnboundSourceValuePushedEventArgs e)
        {

            // Handle this event to save modified data back to your data source
            // something = e.Value; /* TODO: Propagate the value into the storage.*/
        }
    }
}